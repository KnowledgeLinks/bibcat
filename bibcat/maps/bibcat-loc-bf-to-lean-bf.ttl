@prefix adms:   <http://www.w3.org/ns/adms#>.
@prefix bf: <http://id.loc.gov/ontologies/bibframe/> .
@prefix bc: <http://knowledgelinks.io/ns/bibcat/> .
@prefix dcterms:<http://purl.org/dc/terms/> .
@prefix kds: <http://knowledgelinks.io/ns/data-structures/> .
@prefix locn:   <http://www.w3.org/ns/locn#>.
@prefix oslo:   <http://purl.org/oslo/ns/localgov#>.
@prefix ql:     <http://semweb.mmlab.be/ns/ql#> .
@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#>.
@prefix relators: <http://id.loc.gov/vocabulary/relators/> .
@prefix rml:    <http://semweb.mmlab.be/ns/rml#> .
@prefix rr:     <http://www.w3.org/ns/r2rml#>.
@prefix schema: <http://schema.org/> .
@prefix skos:   <http://www.w3.org/2004/02/skos/core#> .
@prefix vcard:  <http://www.w3.org/2006/vcard/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.

bc:RDFClass rr:predicate rdf:type ;
    rr:objectMap [
        rr:reference "type"
    ] .

bc:RDFValue rr:predicate rdf:value ;
    rr:objectMap [
        rr:reference "value"
    ].

bc:RDFSLabel  rr:predicate rdfs:label ;
   rr:objectMap [
       rr:reference "label"
   ] .




<#LOCBFItem_to_BFLeanItem> a rr:TriplesMap ;

    rml:logicalSource [
        rml:source <#SPARQL_JSON_source> ;
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?item
                     WHERE {{ ?item rdf:type bf:Item . }}
                     ORDER BY ?item
                     LIMIT {limit}
                     OFFSET {offset}""" ;
        rml:iterator "item"  
    ] ;

    rr:subjectMap [
        rr:template "{item}" ;
        rr:class bf:Item  
    ] ;


    rr:predicateObjectMap [
        rr:predicate bf:itemOf ;
        rr:objectMap [
            rml:query """SELECT DISTINCT ?value
                         WHERE {{ <{item}> bf:itemOf ?value . }}"""
        ] 
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:heldBy ;
        rr:objectMap [
            rml:query """SELECT DISTINCT ?value
                         WHERE {{ <{item}> bf:heldBy ?value . }}"""
        ] 
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:seeAlso ;
        rr:objectMap [
            rml:query """SELECT DISTINCT ?value
                         WHERE {{ <{item}> rdfs:seeAlso ?value . }}"""
        ] 
    ] ;

     rr:predicateObjectMap [
        rr:predicate bf:shelfMark ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCBFItem_to_BFShelfMarkLcc>
        ] 
    ] .


<#LOCBFInstance_to_BFLeanInstance> a rr:TriplesMap ;
    
    rml:logicalSource [
        rml:source <#SPARQL_JSON_source> ;
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?instance
                     WHERE {{ ?instance rdf:type bf:Instance  .
                              FILTER(isIRI(?instance)) }}
                     ORDER BY ?instance 
                     LIMIT {limit}
                     OFFSET {offset}""" ;
        rml:iterator "instance"
    ] ;
 
    rr:subjectMap [
        rr:template "{instance}" ;
        rr:class bf:Instance  
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [
            rml:query """SELECT DISTINCT ?label 
                         WHERE {{ <{instance}> rdfs:label ?label . }}"""
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:instanceOf ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCInstance_instanceOf_BFWork>
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:identifiedBy ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCInstance_identifiedBy_ISBN>
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:identifiedBy ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCInstance_identifiedBy_Local_iri>
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:identifiedBy ;
        rr:objectMap [          
            rr:parentTriplesMap <#LOCInstance_identifiedBy_Local_bnode>
        ]
    ] ;


    rr:predicateObjectMap [
        rr:predicate bf:carrier ;
        rr:objectMap [
            rml:query """SELECT DISTINCT ?value
                         WHERE {{
                            <{instance}> bf:carrier ?value .
                            FILTER(isiri(?value))
                        }}"""
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:dimensions ;
        rr:objectMap [
            rml:query """SELECT DISTINCT ?value
                         WHERE {{
                            <{instance}> bf:dimensions ?value .
                    }}"""
        ]
    ] ; 



    rr:predicateObjectMap [
        rr:predicate bf:editionStatement ;
        rr:objectMap [
            rml:query """SELECT DISTINCT ?value
                         WHERE {{
                            <{instance}> bf:editionStatement ?value .
                    }}"""
        ]
    ] ; 

    rr:predicateObjectMap [
        rr:predicate bf:issuance ;
        rr:objectMap [
            rml:query """SELECT DISTINCT ?value
                         WHERE {{
                            <{instance}> bf:issuance ?value .
                            FILTER(isiri(?value))
                        }}"""
        ]
    ] ;


    rr:predicateObjectMap [
        rr:predicate bf:media ;
        rr:objectMap [
            rml:query """SELECT DISTINCT ?value
                         WHERE {{
                            <{instance}> bf:media ?media .
                            FILTER(isiri(?value))
                        }}"""
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:note ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCInstance_BFNotes>
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:provisionActivity ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCInstance_Publication>
        ]

    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:provisionActivityStatement ;
        rr:objectMap [
            rml:query """SELECT DISTINCT ?value
                    WHERE {{
                        <{instance}> bf:provisionActivityStatement ?value .
                    }}"""
        ]

    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:responsibilityStatement ;
        rr:objectMap [
            rml:query """SELECT DISTINCT ?value
                WHERE {{
                    <{instance}> bf:responsibilityStatement ?value .
                }}"""
        ]
    ] ;
 

    rr:predicateObjectMap [
        rr:predicate bf:soundCharacteristic ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCBFInstance_to_Sound_Characteristics>

        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:soundContent ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCBFInstance_to_Sound_Content>
        ]
    ] ;
   
    rr:predicateObjectMap [
        rr:predicate bf:tableOfContents ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCBFInstance_to_BFTableOfContents>
        ]

    ] ;
 
    rr:predicateObjectMap [
        rr:predicate bf:title ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCBFInstance_to_BFTitle> 
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdf:type ;
        rr:objectMap [
            rml:query """SELECT DISTINCT ?value 
                    WHERE {{
                        <{instance}> rdf:type ?value .
                        FILTER (?value != bf:Instance)
                    }}"""
        ]
    ] ;
    
    rr:predicateObjectMap bc:RDFSLabel .

<#LOCBFItem_to_BFShelfMarkLcc> a rr:TriplesMap ;

    rml:logicalSource [
        rml:source <#SPARQL_JSON_source> ;
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?shelf_mark
                     WHERE {{ <{item}> bf:shelfMark ?shelf_mark }}""";
        rml:iterator "shelf_mark"
       
    ] ;

    rr:subjectMap [
        rr:termType rr:BlankNode ;
        rr:class bf:ShelfMarkLcc ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [
            rml:query """SELECT DISTINCT ?label
                         WHERE {{ <{item}> bf:shelfMark ?shelf_mark .
                                  ?shelf_mark rdfs:label ?label .
                                  }}"""
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:source ;
        rr:objectMap [
            rml:query """SELECT DISTINCT ?value
                         WHERE {{ <{item}> bf:shelfMark ?shelf_mark .
                                  ?shelf_mark bf:source ?value .
                                  }}"""
        ]
    ] .

<#LOCInstance_instanceOf_BFWork> a rr:TriplesMap ;
    
    rml:logicalSource [
        rml:source <#SPARQL_JSON_source> ;
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?work
                     WHERE {{ <{instance}> bf:instanceOf ?work }}""";
        rml:iterator "work"
    ] ;

    rr:subjectMap [
        rr:template "{work}" ;
        rr:class bf:Work ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:contribution ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCWork_contribution>
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:summary ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCWork_summary>
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:subject ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCWork_subject_BFTopic>
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:subject ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCWork_subject_BFAgent>
        ]
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdf:type ;
        rr:objectMap [
            rml:query """SELECT DISTINCT ?value 
                    WHERE {{
                        <{work}> rdf:type ?value .
                        FILTER (?value != bf:Work)
                    }}"""
        ]
    ] .


<#LOCInstance_identifiedBy_ISBN> a rr:TriplesMap ;

    rml:logicalSource [
        rml:source <#SPARQL_JSON_source> ;
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?isbn ?value
                  WHERE {{ <{instance}> bf:identifiedBy ?isbn .
                           ?isbn rdf:type bf:Isbn ;
                                 rdf:value ?value . }}""" ;
        rml:iterator "isbn"

    ] ;

    rr:subjectMap [
        rr:termType rr:BlankNode ;
        rr:class bf:Isbn 
        
    ] ;

    rr:predicateObjectMap bc:RDFValue .


<#LOCInstance_identifiedBy_Local_iri> a rr:TriplesMap ;

    rml:logicalSource [
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?local ?value ?source
                  WHERE {{ <{instance}> bf:identifiedBy ?local .
                            ?local rdf:type bf:Local ;
                                   rdf:value ?value ;
                                   bf:source ?source .
                            FILTER ( isIRI(?source) ) 
                           }}""";
        rml:iterator "local"
    ] ;

    rr:subjectMap [
        rr:termType rr:BlankNode ;
        rr:class bf:Local 
        
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:source ;
        rr:objectMap [
            rr:reference "source"
       ]
    ] ;

    rr:predicateObjectMap bc:RDFValue .

<#LOCInstance_identifiedBy_Local_bnode> a rr:TriplesMap ;

    rml:logicalSource [
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?local ?value 
                    WHERE {{
                         <{instance}> bf:identifiedBy ?local .
                          ?local rdf:type bf:Local ;
                                 rdf:value ?value ;
                                 bf:source ?source .
                        FILTER(isblank(?source))  
                    }}""";
        rml:iterator "local"
    ] ;

    rr:subjectMap [
        rr:termType rr:BlankNode ;
        rr:class bf:Local 
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:source ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCInstance_Local_bnode_source>
        ]  
    ] ;

    rr:predicateObjectMap bc:RDFValue .


<#LOCInstance_Local_bnode_source> a rr:TriplesMap ;
    rml:logicalSource [
         rml:referenceFormulation ql:JSON ;
         rml:query """SELECT DISTINCT ?source ?label 
                WHERE {{
                    <{instance}> bf:identifiedBy _:{local} .
                    _:{local} bf:source ?source .
                    ?source rdfs:label ?label .
                }}""";
        rml:iterator "source"
    ] ;

    rr:subjectMap [
        rr:termType rr:BlankNode ;
        rr:class bf:Source
    ] ;

    rr:predicateObjectMap bc:RDFSLabel .

<#LOCInstance_BFNotes> a rr:TriplesMap ;
    rml:logicalSource [
        rml:source <#SPARQL_JSON_source> ;
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?note ?label ?type_of
                     WHERE {{ 
                            <{instance}> bf:note ?note .
                            ?note rdf:type bf:Note ;
                                  rdfs:label ?label .
                            OPTIONAL {{ ?note bf:noteType ?type_of }}
                    }}""";
        rml:iterator "note"
    ] ;


    rr:subjectMap [
        rr:termType rr:BlankNode ;
        rr:class bf:Note
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [
            rr:reference "label"
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:noteType ;
        rr:objectMap [
            rr:reference "type_of"
        ]
    ] .


<#LOCInstance_Publication> a rr:TriplesMap ;

    rml:logicalSource [
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?publication ?date ?place ?agent
                     WHERE {{
                        <{instance}> bf:provisionActivity ?publication .
                        ?publication rdf:type bf:Publication .
                        OPTIONAL {{ ?publication bf:date ?date }}
                        OPTIONAL {{ ?publication bf:place/rdfs:label ?place }}
                        OPTIONAL {{ ?publication bf:place ?place .
                                    FILTER (isIRI(?place) ) }}
                        OPTIONAL {{ ?publication bf:agent ?agent }}
                     }}""";
        rml:iterator "publication"

    ] ;

    rr:subjectMap [
        rr:termType rr:BlankNode ;
        rr:class bf:Publication 
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdf:type ;
        rr:objectMap [
            rr:constant bf:ProvisionActivity
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:date ;
        rr:objectMap [
            rr:reference "date"
        ]   
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:place ;
        rr:objectMap [
            rr:subjectMap [
                rr:termType rr:BlankNode ;
                rr:class bf:Place
            ] ;
            rr:reference "place"
        ]   
    ] .

   
<#LOCBFInstance_to_Sound_Characteristics> a rr:TriplesMap ;

    rml:logicalSource [
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?characteristic ?label ?type
                     WHERE {{
                        <{instance}> bf:soundCharacteristic ?characteristic .
                        ?characteristic rdf:type ?type;
                                        rdfs:label ?label .
                    }}""";
        rml:iterator "characteristic" 

    ] ;

    rr:subjectMap [
        rr:termType rr:BlankNode ;
    ] ; 

    rr:predicateObjectMap  bc:RDFClass ;

    rr:predicateObjectMap bc:RDFSLabel .

<#LOCBFInstance_to_Sound_Content> a rr:TriplesMap ;

     rml:logicalSource [
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?content ?label ?type
                     WHERE {{
                        <{instance}> bf:soundContent ?content .
                        ?content rdf:type ?type;
                                        rdfs:label ?label .
                    }}""";
        rml:iterator "content" 

    ] ;

    rr:subjectMap [
        rr:termType rr:BlankNode ;
    ] ; 

    rr:predicateObjectMap  bc:RDFClass ;

    rr:predicateObjectMap bc:RDFSLabel .
  
 <#LOCBFInstance_to_BFTableOfContents> a rr:TriplesMap ;

    rml:logicalSource [
        rml:source <#SPARQL_JSON_source> ;
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?toc ?label
                     WHERE {{ <{instance}> bf:tableOfContents ?toc .
                               ?toc rdfs:label ?label .
                        }}""";
        rml:iterator "toc"
    ] ;

    rr:subjectMap [
        rr:termType rr:BlankNode ;
        rr:class bf:TableOfContents ;
    ] ;

    rr:predicateObjectMap bc:RDFSLabel .


<#LOCBFInstance_to_BFTitle> a rr:TriplesMap ;

    rml:logicalSource [
        rml:source <#SPARQL_JSON_source> ;
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?title ?label ?main ?subtitle
                     WHERE {{ <{instance}> bf:title ?title .
                              ?title rdfs:label ?label ;
                                     bf:mainTitle ?main . 
                              OPTIONAL {{ ?title bf:subtitle ?subtitle }}   
                     }}""";
        rml:iterator "title"
    ] ;

    rr:subjectMap [
        rr:termType rr:BlankNode ;
        rr:class bf:Title ;
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [
            rr:reference "label"
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:mainTitle ;
        rr:objectMap [
            rr:reference "main"
       ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:subtitle ;
        rr:objectMap [
            rr:reference "subtitle"
        ]
    ] .

<#LOCWork_contribution> a rr:TriplesMap ;

    rml:logicalSource [
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?contribution
            WHERE {{
                <{work}> bf:contribution ?contribution .
            }}""";
        rml:iterator "contribution"
    ] ;

    rr:subjectMap [
        rr:termType rr:BlankNode ;
        rr:class bf:Contribution 
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:agent ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCWork_contribution_Agent> 
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate bf:role ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCWork_ContributionRole>
        ]
    ] .


<#LOCWork_contribution_Agent> a rr:TriplesMap ;

    rml:logicalSource [
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT ?agent ?label 
            WHERE {{
                 _:{contribution} bf:agent ?agent .
                ?agent rdfs:label ?label .
            }}""";
        rml:iterator "agent"
    ] ;  

    rr:subjectMap [
        rr:template "{agent}" ;
        rr:class bf:Agent
    ] ;  

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [
            rr:reference "label"
        ]
    ] .

<#LOCWork_ContributionRole> a rr:TriplesMap ;

    rml:logicalSource [
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT ?role ?label
                    WHERE {{
                         _:{contribution} bf:role ?role .
                        ?role rdf:type bf:Role .
                        OPTIONAL {{ ?role rdfs:label ?label }}
                    }}""";
        rml:iterator "role"
    ] ;

    rr:subjectMap [
        rr:termType rr:BlankNode ;
        rr:class bf:Role 
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [
            rr:reference "label"
        ]
    ] .


<#LOCWork_summary> a rr:TriplesMap ;

    rml:logicalSource [
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?summary ?label
            WHERE {{
                <{work}> bf:summary ?summary .
                ?summary rdfs:label ?label .
            }}""";
        rml:iterator "summary"
    ] ;

    rr:subjectMap [
        rr:termType rr:BlankNode ;
        rr:class bf:Summary 
    ] ;

    rr:predicateObjectMap bc:RDFSLabel ;

    rr:predicateObjectMap [
        rr:predicate bf:source ;
        rr:objectMap [
            rr:parentTriplesMap <#LOCWork_summary_Source>
        ]
    ]   .


<#LOCWork_summary_Source> a rr:TriplesMap ;
    
    rml:logicalSource [
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?source ?label 
            WHERE {{
                <{work}> bf:summary ?summary .
                ?summary bf:source ?source .
                ?source rdfs:label ?label 
            }}""";
        rml:iterator "source"
    ] ;

    rr:subjectMap [
        rr:termType rr:BlankNode ;
        rr:class bf:Source 
    ] ; 

    rr:predicateObjectMap bc:RDFSLabel.

<#LOCWork_subject_BFTopic> a rr:TriplesMap ;
    
    rml:logicalSource [
        rml:referenceFormulation ql:JSON ; 
        rml:query """SELECT DISTINCT ?subject ?label
                     WHERE {{ <{work}> bf:subject ?subject .
                              ?subject rdf:type bf:Topic ;
                                       rdfs:label ?label . }}""";
        rml:iterator "subject"
    ] ;

    rr:subjectMap [
        rr:template "{subject}" ;
        rr:class bf:Topic 
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [
            rr:reference "label"
        ]
    ] .

<#LOCWork_subject_BFAgent> a rr:TriplesMap ;
    
    rml:logicalSource [
        rml:referenceFormulation ql:JSON ;
        rml:query """SELECT DISTINCT ?subject ?label
                     WHERE {{ <{work}> bf:subject ?subject .
                              ?subject rdf:type bf:Agent ;
                                       rdfs:label ?label .}}""";
        rml:iterator "subject"
    ] ;

    rr:subjectMap [
        rr:template "{subject}" ;
        rr:class bf:Agent 
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [
            rr:reference "label"

        ]
    ] .
